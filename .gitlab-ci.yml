image: haskell:8.6.5

cache:
  key: "all"  # Share cache to speed-up initial MR build
  paths:
    - .stack-root/
    - .stack-work/
    - $CROSSREF_VERIFIER_DIR/

stages:
  - test
  - test-script
  - build

variables:
  STACK_ROOT: "$CI_PROJECT_DIR/.stack-root"
  STACK_GLOBAL_CONFIG: "$CI_PROJECT_DIR/.stack-root/config.yaml"
  # Resolver that we use to build code outside our repository
  STACK_RESOLVER: "lts-13.22"
  STACK_BUILD_OPTIONS:
    --ghc-options -Werror --ghc-options -optl-static --ghc-options -fPIC
    --fast --local-bin-path tmp
    --test --no-run-tests
    --bench --no-run-benchmarks
    --haddock --no-haddock-deps
  CROSSREF_VERIFIER_COMMIT: "b3615befce62a483699e1705fd6715c7135820e6"
  CROSSREF_VERIFIER_DIR: ".crossref-verifier"

before_script:
  - 'mkdir -p "${STACK_GLOBAL_CONFIG%/*}" && touch "$STACK_GLOBAL_CONFIG"'
  - 'echo "system-ghc: true" >> "$STACK_GLOBAL_CONFIG"'
  - 'echo "install-ghc: false" >> "$STACK_GLOBAL_CONFIG"'

build-and-test:
  stage: test
  only:
    refs:
      - merge_requests
      - master
      - production
    changes: &changes
      - Dockerfile
      - .dockerignore
      - .gitlab-ci.yml
      - morley.cabal
      - stack.yaml
      - test.bats
      - app/**/*
      - contracts/**/*
      - examples/EDSL/**/*
      - prelude/**/*
      - scripts/morley.sh
      - src/**/*
      - test/**/*
      - lorentz-contracts/**/*
  script:
    - mkdir -p ./weeder/bin
    - stack --resolver $STACK_RESOLVER
        install weeder
    - cp /usr/lib/gcc/x86_64-linux-gnu/6/crtbeginT.o /usr/lib/gcc/x86_64-linux-gnu/6/crtbeginT.o.orig
    - cp /usr/lib/gcc/x86_64-linux-gnu/6/crtbeginS.o /usr/lib/gcc/x86_64-linux-gnu/6/crtbeginT.o
    - stack install morley $STACK_BUILD_OPTIONS
    - stack install lorentz-contracts $STACK_BUILD_OPTIONS
    - stack test morley
        --test-arguments="--xml=report/morley_test_report.xml"
    - stack test lorentz-contracts
        --test-arguments="--xml=../report/lorentz_contracts_test_report.xml"
    # Run weeder after our code is built
    - weeder .
    # Test EDSL examples
    - stack --stack-yaml examples/EDSL/stack.yaml test
    - rm -rf "$STACK_ROOT/programs"  # Faster to download them again
  after_script:
    # Edit xml report due to bug with `classname` field in test xml reports in CI
    # https://gitlab.com/gitlab-org/gitlab-ce/issues/52997
    - sed -i -r
        's:<testcase name="([^<>]*?)" time="([0-9.]*?)" classname="([^<>]*?)">:<testcase name="\3.\1" time="\2" classname="\3">:g'
        report/*.xml

  artifacts:
    paths:
      - tmp/morley
      - tmp/lorentz-contracts
    reports:
      junit:
        - report/*.xml

test-shell-script:
  image: alpine
  stage: test-script
  tags:
    - docker-executor
  dependencies:
    - build-and-test
  only:
    refs:
      - merge_requests
    changes: *changes
  script:
    - apk add bats
    - bats test.bats

build-docker-latest:
  image: docker:stable

  tags:
    - shell-executor

  before_script: &docker_login
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY

  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:latest

  stage: build
  dependencies:
    - build-and-test
  only:
    refs:
      - master
    changes: *changes
  script: &docker_script
    - docker build -t $IMAGE_TAG .
    - docker push $IMAGE_TAG

build-docker-production:
  image: docker:stable

  tags:
    - shell-executor

  before_script: *docker_login

  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:production

  stage: build
  dependencies:
    - build-and-test
  only:
    refs:
      - production
    changes: *changes
  script: *docker_script

verify-doc-links:
  stage: test
  allow_failure: true
  retry:
    max: 2
    when: script_failure
  only:
    refs:
      - merge_requests
  script:
    - "git clone https://github.com/serokell/crossref-verifier.git $CROSSREF_VERIFIER_DIR || :"
    - cd $CROSSREF_VERIFIER_DIR
    - git fetch
    - git checkout $CROSSREF_VERIFIER_COMMIT
    - stack --resolver $STACK_RESOLVER
        install crossref-verifier
    - cd ..
    - crossref-verify -v --no-progress -m full

lint:
  stage: test
  only:
    refs:
      - merge_requests
    changes: *changes
  script:
    - rm -rf crossref-verifier  # TODO: remove in June
    - stack --resolver $STACK_RESOLVER
        install hlint
    - ./scripts/lint.sh
